const axios = require('axios');
const { config } = require('../config');
const { getRandomUserAgent } = require('../utils/userAgent');
const { generateSafeFilename } = require('../utils/textUtils');

class DownloadService {
  // 下载视频
  static async downloadVideo(req, res) {
    try {
      const { downloadUrl, downloadLinks, title } = req.body;
      
      // 支持新的单URL方式和旧的链接数组方式
      let finalDownloadUrl = downloadUrl;
      
      if (!finalDownloadUrl && downloadLinks && Array.isArray(downloadLinks)) {
        // 兼容旧版本：从链接数组中选择最优链接
        finalDownloadUrl = this.selectBestVideoUrl(downloadLinks);
      }
      
      if (!finalDownloadUrl) {
        return res.status(400).json({ error: '未找到视频下载链接' });
      }
      
      console.log('开始下载视频:', finalDownloadUrl);
      
      const response = await axios({
        method: 'GET',
        url: finalDownloadUrl,
        responseType: 'stream',
        timeout: config.request.downloadTimeout,
        headers: {
          'User-Agent': getRandomUserAgent(),
          'Referer': 'https://www.douyin.com/',
          'Accept': '*/*'
        }
      });
      
      const fileName = generateSafeFilename(title, '.mp4');
      
      res.setHeader('Content-Disposition', `attachment; filename*=UTF-8''${encodeURIComponent(fileName)}`);
      res.setHeader('Content-Type', 'video/mp4');
      
      if (response.headers['content-length']) {
        res.setHeader('Content-Length', response.headers['content-length']);
      }
      
      response.data.pipe(res);
      
    } catch (error) {
      console.error('视频下载失败:', error.message);
      if (!res.headersSent) {
        res.status(500).json({ error: '视频下载失败: ' + error.message });
      }
    }
  }

  // 下载音频
  static async downloadAudio(req, res) {
    try {
      const { downloadLinks, audioUrl, title } = req.body;
      
      // 支持新的单URL方式和旧的链接数组方式
      let finalAudioUrl = audioUrl;
      
      if (!finalAudioUrl && downloadLinks && Array.isArray(downloadLinks)) {
        // 兼容旧版本：从链接数组中查找MP3链接
        let mp3Link = downloadLinks.find(link => 
          link.label && link.label.includes('MP3')
        );
        finalAudioUrl = mp3Link ? mp3Link.url : null;
      }
      
      if (!finalAudioUrl) {
        return res.status(400).json({ error: '未找到音频下载链接' });
      }
      
      console.log('开始下载MP3音频:', finalAudioUrl);
      
      const response = await axios({
        method: 'GET',
        url: finalAudioUrl,
        responseType: 'stream',
        timeout: config.request.downloadTimeout,
        headers: {
          'User-Agent': getRandomUserAgent(),
          'Referer': 'https://www.douyin.com/',
          'Accept': '*/*'
        }
      });
      
      const fileName = generateSafeFilename(title, '.mp3');
      
      res.setHeader('Content-Disposition', `attachment; filename*=UTF-8''${encodeURIComponent(fileName)}`);
      res.setHeader('Content-Type', 'audio/mpeg');
      
      if (response.headers['content-length']) {
        res.setHeader('Content-Length', response.headers['content-length']);
      }
      
      response.data.pipe(res);
      
    } catch (error) {
      console.error('音频下载失败:', error.message);
      if (!res.headersSent) {
        res.status(500).json({ error: '音频下载失败: ' + error.message });
      }
    }
  }

  // 从下载链接数组中选择最佳视频URL
  static selectBestVideoUrl(downloadLinks) {
    // 优先选择普通质量视频链接
    let normalLink = downloadLinks.find(link => 
      link.label && link.label.includes('MP4') && 
      !link.label.includes('HD') && !link.label.includes('MP3')
    );
    
    if (normalLink) {
      return normalLink.url;
    }
    
    // 如果没有普通质量，选择HD链接
    let hdLink = downloadLinks.find(link => 
      link.label && link.label.includes('HD')
    );
    
    if (hdLink) {
      return hdLink.url;
    }
    
    // 最后选择任何MP4链接
    let mp4Link = downloadLinks.find(link => 
      link.label && link.label.includes('MP4') && !link.label.includes('MP3')
    );
    
    return mp4Link ? mp4Link.url : '';
  }
}

module.exports = DownloadService;